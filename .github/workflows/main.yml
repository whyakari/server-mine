name: Server Mine

on:
  workflow_dispatch

env:
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}

jobs:
  build_ci:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo Server-Mine
        uses: MoeKernel/github-repo-action@v3.1
        with:
          depth: 1
          branch: 'main'
          owner: 'whyakari'
          repository: 'server-mine'
          access-token: ${{ secrets.TOKEN_GITHUB }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 5

      - name: Github Configs
        working-directory: ./server-mine
        run: |
          git config --global user.email "akariondev@gmail.com"
          git config --global user.name "ginkgo"
  
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends build-essential software-properties-common
          sudo add-apt-repository -y ppa:openjdk-r/ppa
          sudo apt update
          sudo apt -y --no-install-recommends install openjdk-8-jre openjdk-8-jdk
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1
          sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac 1
          sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/bin/java
          sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac

      - name: Set JAVA_HOME and PATH
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Check Versions If Installed
        working-directory: ./server-mine
        run: |
          java -version
          javac -version

      - name: Get Paper
        working-directory: ./server-mine
        run: |
          url='https://api.papermc.io/v2/projects/paper/versions/1.8.8/builds/445/downloads/paper-1.8.8-445.jar'
          wget -O minecraft_server.jar $url

      - name: Set Permission 
        working-directory: ./server-mine
        run: |
          chmod +x minecraft_server.jar

      - name: Start Server
        working-directory: ./server-mine
        run: |
          ram=5G # Set the RAM here.
          sudo java -Xmx$ram -Xms$ram -jar minecraft_server.jar nogui
          
      - name: Agree to the EULA
        working-directory: ./server-mine
        run: |
          sed -i '3s/false/true/' eula.txt

      - name: Disable online-mode
        working-directory: ./server-mine
        run: |
          sudo sed -i 's/^online-mode=true$/online-mode=false/' server.properties
          cat server.properties

      - name: Download ngrok
        working-directory: ./server-mine
        run: |
          wget -O ngrok.tgz https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          sudo tar -xvzf ngrok.tgz -C /usr/local/bin

      - name: Set ngrok Config
        working-directory: ./server-mine
        run: |
          ngrok config add-authtoken ${{ secrets.TOKEN_NGROK }}

      - name: Pip Install Packages
        working-directory: ./server-mine
        run: |
          pip install pyngrok Pyrogram Pyromod TgCrypto load_dotenv

      - name: Export Variable
        run: |
         echo "TOKEN_NGROK=${{ secrets.TOKEN_NGROK }}" >> .env
         echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env
         echo "API_ID=${{ secrets.API_ID }}" >> .env
         echo "API_HASH=${{ secrets.API_HASH }}" >> .env
         echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env

      - name: ngrok and Start Server Minecraft 
        working-directory: ./server-mine
        run: |
          export ram=5G
          sudo java -Xmx$ram -Xms$ram -jar minecraft_server.jar nogui &
          python bot.py
